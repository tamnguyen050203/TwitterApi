openapi: 3.0.3
info:
  title: Swagger Twitter Clone - OpenAPI 3.0
  description: |-
    This is a Twitter Clone Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
  contact:
    email: tamnguyen231173@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:3066
paths:
  /users/login:
    post:
      tags:
        - users
      summary: Login
      description: Login to the application
      operationId: login
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginBody"
        required: true
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful
                  result:
                    $ref: "#/components/schemas/SuccessAuthentication"
        "422":
          description: Invalid input
  /users/me:
    get:
      tags:
        - users
      summary: Get current user
      description: Get current user
      operationId: getCurrentUser
      security:
        - BearerAuth: []
      responses:
        default:
          description: Get current user successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    LoginBody:
      type: object
      properties:
        email:
          type: string
          example: tamnguyen@gmail.com
        password:
          type: string
          example: 123456#As
    SuccessAuthentication:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRlMWRkMDlmYjQ5MWRkNDMzNmIxZTAyIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTMwMjY5NTUsImV4cCI6MTY5MzA0NDk1NX0.Jo4QrTg9QrBEgEXuzvy9N2sL9hoebdV51iuy8rTB1Pk
        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRlMWRkMDlmYjQ5MWRkNDMzNmIxZTAyIiwidG9rZW5fdHlwZSI6MSwidmVyaWZ5IjoxLCJpYXQiOjE2OTMwMjY5NTUsImV4cCI6MTY5MzYzMTc1NX0.KGMcfr06V_WsHPT1lqJEBuDNl7TbegsRKt5DZ1xjGCg
    User:
      type: object
      properties:
        _id:
          type: string
          format: MongoDB ObjectId
          example: 64e1dd09fb491dd4336b1e02
        name:
          type: string
        email:
          type: string
        date_of_birth:
          type: string
          format: ISO8601
          example: "2003-05-02T06:30:33.781Z"
        created_at:
          type: string
          format: ISO8601
          example: "2003-05-02T06:30:33.781Z"
        updated_at:
          type: string
          format: ISO8601
          example: "2003-05-02T06:30:33.781Z"
        verify:
          $ref: "#/components/schemas/UserVerifyStatus"
        twitter_circle:
          type: array
          items:
            type: string
            format: MongoDB ObjectId
          example: ["64e1dd09fb491dd4336b1e12", "64e1dd09asd91dd4336b1e12"]
        bio:
          type: string
        location:
          type: string
        website:
          type: string
        username:
          type: string
        avatar:
          type: string
          example: "https://i.imgur.com/1.jpg"
        cover_photo:
          type: string
          example: "https://i.imgur.com/1.jpg"
      example:
        _id: "64e1dd09fb491dd4336b1e02"
        name: "tam nguyen"
        email: "tamnguyen050203+6@gmail.com"
        date_of_birth: "2003-05-02T06:30:33.781Z"
        created_at: "2023-08-20T09:29:45.388Z"
        updated_at: "2023-08-20T09:30:43.788Z"
        verify: 1
        twitter_circle: []
        bio: ""
        location: ""
        website: ""
        username: "user_64e1dd09fb491dd4336b1e02"
        avatar: ""
        cover_photo: ""
    UserVerifyStatus:
      type: number
      enum: [Unverified, Verified, Banned]
      example: 1
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
